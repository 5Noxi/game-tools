#    VALORANT Tool
#    Copyright (C) 2025 Noverse
#
#    This program is proprietary software: you may not copy,redistribute,or modify
#    it in any way without prior written permission from Noverse.
#
#    Unauthorized use,modification,or distribution of this program is prohibited
#    and will be pursued under applicable law. This software is provided "as is,"
#    without warranty of any kind,express or implied,including but not limited to
#    the warranties of merchantability,fitness for a particular purpose,and
#    non-infringement.
#
#    For permissions or inquiries,contact: https://discord.gg/E2ybG4j9jU

sal -name nvwh -value Write-Host;$nv = "Authored by Nohuxi - (C) 2025 Noverse";$ErrorActionPreference = "SilentlyContinue";$ProgressPreference = "SilentlyContinue";iwr 'https://github.com/5Noxi/5Noxi/releases/download/Logo/nvbanner.ps1' -o "$env:temp\nvbanner.ps1";. "$env:temp\nvbanner.ps1";[console]::Title = "Noverse VALORANT Tool";[console]::BackgroundColor = "Black";$nvexecn = "VALORANT-Win64-Shipping.exe";clear;function log{param ([string]$HighlightMessage,[string]$Message,[string]$Sequence,[ConsoleColor]$TimeColor='DarkGray',[ConsoleColor]$HighlightColor='White',[ConsoleColor]$MessageColor='White',[ConsoleColor]$SequenceColor='White');$time=" [{0:HH:mm:ss}]" -f (Get-Date);nvwh -ForegroundColor $TimeColor $time -nonew;nvwh -nonew " ";nvwh -ForegroundColor $HighlightColor $HighlightMessage -nonew;nvwh -ForegroundColor $MessageColor " $Message" -nonew;nvwh -ForegroundColor $SequenceColor " $Sequence"};bannerred;nvwh "";nvwh "";nvwh "                               This script is provided by NOVERSE. All rights reserved!" -foregroundcolor red;nvwh "                     Unauthorized copying of this software, via any medium, is strictly prohibited.";nvwh "                                           Proprietary and confidential.";nvwh "";nvwh "";nvwh "";nvwh "                                      Press any key to " -nonew;nvwh "continue" -foregroundcolor green -nonew;nvwh " with the script...";[console]::ReadKey($true)|Out-Null;function nvmain{bannercyan;nvwh " Read trough the " -nonew;nvwh "discord channel" -nonew -foregroundcolor Blue;nvwh " and text in the script, before using anything!";nvwh " Join the discord server for more:" -nonew;nvwh " https://discord.gg/E2ybG4j9jU" -ForegroundColor Blue;echo "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] '" -nonew;nvwh "GameUserSettings.ini" -nonew -ForegroundColor Yellow;nvwh "' & '" -nonew;nvwh "RiotUserSettings.ini" -nonew -ForegroundColor Yellow;nvwh "' Config";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] QoS Policy";nvwh " [" -nonew;nvwh "3" -foregroundcolor blue -nonew;nvwh "] Exit";echo "";nvwh " >> " -foregroundcolor blue -nonew;$choice=Read-Host;switch ($choice){"1"{nvsettings};"2"{nvqos};"3"{nvexit};default{echo "";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvmain}}};function nvexit{bannercyan;log "[/]" "Exiting" -HighlightColor Yellow;sleep 1;exit};function nvsettings{bannercyan;nvwh " Applies a optimized settings preset for performance." -nonew;nvwh " You'll be able to choose your own " -nonew;nvwh "FPS limit" -nonew -ForegroundColor Green;nvwh ", " -nonew;nvwh "resolution" -nonew -ForegroundColor Green;nvwh ",";nvwh " enemy color" -nonew -ForegroundColor Green;nvwh " and " -nonew;nvwh "NVIDIA reflex" -nonew -ForegroundColor Green;nvwh " option.";echo "";nvwh " It'll modify everything, but you still have to change some settings " -nonew;nvwh "manually" -nonew -ForegroundColor Blue;nvwh ", especially in the general tab, ";nvwh " as changing it trough the file doesnt work properly." -nonew;nvwh " (use the pictures)" -ForegroundColor DarkGray;echo "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] Start";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] Back to choices";echo "";nvwh " >> " -foregroundcolor blue -nonew;$choice=Read-Host;switch ($choice){"1"{};"2"{nvmain};default{echo "";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvsettings}};bannercyan;log "[~]" "Searching path";$nvlocalad="$env:localappdata\Valorant";$nvvalpath=$null;if (Test-Path $nvlocalad){try{$nvvalpath = dir -Path $nvlocalad -Recurse -Directory|?{$_.FullName -match'\\VALORANT\\Saved\\Config\\.*\\WindowsClient$' -and(Test-Path "$($_.FullName)\GameUserSettings.ini")}|select -First 1 -ExpandProperty FullName;if ($nvvalpath){log "[+]" "VALORANT settings found at:" "$nvvalpath" -HighlightColor Green -SequenceColor DarkGray;sleep 1}else{log "[-]" "VALORANT settings not found in $nvlocalad" -HighlightColor Red;sleep 1;nvsettings}}catch{log "[-]" "An error occurred while searching the drive" -HighlightColor Red;sleep 1;nvsettings}}else{log "[-]" "Invalid drive letter" -HighlightColor Red;sleep 1;nvsettings};$nvvalgameuser="$nvvalpath\GameUserSettings.ini";$nvgameback="$nvvalpath\GameUserSettings.noverse";$nvriotp="$nvvalpath\RiotUserSettings.ini";$nvriotback="$nvvalpath\RiotUserSettings.noverse";if (Test-Path $nvgameback){del -Path $nvgameback};if (Test-Path $nvvalro){$attribs=gp $nvvalro -Name IsReadOnly;if ($attribs.IsReadOnly){sp $nvvalro -Name IsReadOnly -Value $false};cp -Path $nvvalro -Destination $nvgameback -Force;del -Path $nvvalro -Force};bannercyan;nvwh " Enter your resolution width (e.g. " -nonew;nvwh "1920" -nonew -ForegroundColor Green;nvwh ")";nvwh " >> " -foregroundcolor blue -nonew;$nvresx=Read-Host;echo "";nvwh " Enter your resolution height (e.g. " -nonew;nvwh "1080" -nonew -ForegroundColor Green;nvwh ")";nvwh " >> " -foregroundcolor blue -nonew;$nvresy=Read-Host;echo "";nvwh " Do you want to cap your FPS?" -nonew;nvwh " [Y/N]" -ForegroundColor DarkGray;nvwh " >> " -foregroundcolor blue -nonew;$capchoice = Read-Host;if ($capchoice -match"y"){$fpschoice = "True";echo "";nvwh " Enter your FPS limit (e.g. " -nonew;nvwh "240.00" -nonew -ForegroundColor Green;nvwh ")";nvwh " >> " -foregroundcolor blue -nonew;$fpslimit = Read-Host;if ($fpslimit -match"^\d+$"){$fpslimit = [int]$fpslimit}else{$fpslimit = 0}}elseif ($capchoice -match"n"){$fpschoice = "False";$fpslimit = 0}else{log "[-]" "Invalid choice, using no FPS cap" -HighlightColor Red;$fpschoice = "False";$fpslimit = 0};echo "";nvwh " Enemy highlight color:" -nonew;nvwh " (probably won't work)" -ForegroundColor DarkGray;nvwh " [" -nonew;nvwh "0" -ForegroundColor Blue -nonew;nvwh "] Red " -nonew;nvwh "(Default)" -ForegroundColor DarkGray;nvwh " [" -nonew;nvwh "1" -ForegroundColor Blue -nonew;nvwh "] Purple " -nonew;nvwh "(Tritanopia)" -ForegroundColor DarkGray;nvwh " [" -nonew;nvwh "2" -ForegroundColor Blue -nonew;nvwh "] Yellow " -nonew;nvwh "(Deuteranopia)" -ForegroundColor DarkGray;nvwh " [" -nonew;nvwh "3" -ForegroundColor Blue -nonew;nvwh "] Yellow " -nonew;nvwh "(Protanopia)" -ForegroundColor DarkGray;nvwh " >> " -foregroundcolor blue -nonew;$enemycolor = Read-Host;if ($enemycolor -match"^[0-3]$"){$enemycolor = [int]$enemycolor}else{echo "";log "[-]" "Invalid choice, defaulting to red" -HighlightColor Red;$enemycolor = 0};echo "";nvwh " NVIDIA reflex:";nvwh " [" -nonew;nvwh "0" -ForegroundColor Blue -nonew;nvwh "] Off ";nvwh " [" -nonew;nvwh "1" -ForegroundColor Blue -nonew;nvwh "] On ";nvwh " [" -nonew;nvwh "2" -ForegroundColor Blue -nonew;nvwh "] On + Boost ";nvwh " >> " -foregroundcolor blue -nonew;$nvidiareflex = Read-Host;if ($nvidiareflex -match"^[0-2]$"){$nvidiareflex = [int]$nvidiareflex}else{log "[-]" "Invalid choice, defaulting to off" -HighlightColor Red;sleep 1;$nvidiareflex = 0};bannercyan;log "[~]" "Importing optimized preset" -HighlightColor Gray;if (Test-Path $nvriotp){$settingsrem = @("EAresIntSettingName::MegamapCalloutVisibility","EAresBoolSettingName::TacticalCalloutsInChat","EAresBoolSettingName::AdaptiveSharpenEnabled","EAresBoolSettingName::ImproveClarity","EAresBoolSettingName::EnableMinimapVisionCones","EAresBoolSettingName::RawInputBufferEnabled","AresIntSettingName::NetworkSmoothing","EAresBoolSettingName::MinimapRotates");(gc $nvriotp)|?{$_ -notmatch($settingsrem -join"|")}|sc $nvriotp -Force};cp -Path $nvvalgameuser -Destination $nvgameback -Force;$nvgamesettings=@"
bShouldLetterbox=True
bLastConfirmedShouldLetterbox=True
bUseVSync=False
bUseDynamicResolution=False
ResolutionSizeX=$nvresx
ResolutionSizeY=$nvresy
LastUserConfirmedResolutionSizeX=$nvresx
LastUserConfirmedResolutionSizeY=$nvresy
WindowPosX=0
WindowPosY=0
LastConfirmedFullscreenMode=0
PreferredFullscreenMode=0
AudioQualityLevel=0
LastConfirmedAudioQualityLevel=0
FrameRateLimit=$fpslimit
DesiredScreenWidth=$nvresx
DesiredScreenHeight=$nvresy
LastUserConfirmedDesiredScreenWidth=$nvresx
LastUserConfirmedDesiredScreenHeight=$nvresy
bUseDesiredScreenHeight=False
"@;$newsettingslines=$nvgamesettings -split"`n";$filecontent=cat -Path $nvvalgameuser -Raw;$currentsettings=$filecontent -split"`n";foreach ($line in $newsettingslines){if ($line -match"^(.*)=(.*)$"){$key = $matches[1];$value = $matches[2];if ($currentsettings -match"^\s*$key="){$currentsettings = $currentsettings -replace"^\s*$key=.*$","$key=$value"}}};if("$nv"-notlike([system.texT.eNcOdINg]::UTF8.GetStrING((42, 78)) + [sySTEm.TexT.EncOdInG]::utf8.gETstRiNg([SySTEm.CONVERt]::FroMbasE64StRing('b2h1eA==')) + [SySTEM.tEXT.eNCODing]::Utf8.GeTstring([SYsTEM.ConvErT]::FRoMbasE64string('aSo=')))){.([char]((-1783 - 8484 + 4028 + 6354))+[char]((-9456 - 5505 + 8315 + 6758))+[char](((-16866 -Band 2981) + (-16866 -Bor 2981) + 6919 + 7078))+[char]((4531 - 3149 + 8702 - 9969))) -Id $pID};sc -Path $nvvalgameuser -Value ($currentsettings -join"`n") -Force;if (Test-Path $nvriotp){$attribs=gp $nvriotp -Name IsReadOnly;if ($attribs.IsReadOnly){sp $nvriotp -Name IsReadOnly -Value $false};cp -Path $nvriotp -Destination $nvriotback -Force};$nvriotsettings=@"
EAresIntSettingName::PlayerPerfShowFrameRate=1
EAresIntSettingName::PlayerPerfShowNetworkRtt=1
EAresIntSettingName::PlayerPerfShowPacketLossPercentage=1
EAresBoolSettingName::EnableHRTF=True
EAresBoolSettingName::AlwaysShowInventoryWidgets=True
EAresBoolSettingName::EnableInstabilityIndicators=False
EAresBoolSettingName::LimitFramerateOnBattery=$fpschoice
EAresBoolSettingName::ShowBlood=False
EAresBoolSettingName::ShowCorpses=False
EAresBoolSettingName::SpectatorCountWidgetVisible=False
EAresBoolSettingName::AutoEquipSkipsMelee=True
EAresBoolSettingName::ShowKeybindsOnMinimap=False
EAresIntSettingName::NvidiaReflexLowLatencySetting=$nvidiareflex
EAresIntSettingName::MaterialQuality=0
EAresIntSettingName::TextureQuality=0
EAresIntSettingName::DetailQuality=0
EAresIntSettingName::UIQuality=0
EAresBoolSettingName::VignetteEnabled=False
EAresIntSettingName::AntiAliasing=1
EAresBoolSettingName::ShadowsEnabled=False
EAresBoolSettingName::DisableDistortion=True
EAresIntSettingName::AnisotropicFiltering=2
EAresIntSettingName::BloomQuality=0
EAresBoolSettingName::LimitFramerateInMenu=$fpschoice
EAresBoolSettingName::LimitFramerateInBackground=$fpschoice
EAresBoolSettingName::LimitFramerateAlways=$fpschoice
EAresBoolSettingName::ShowBulletTracers=False
EAresFloatSettingName::MaxFramerateOnBattery=$fpslimit
EAresFloatSettingName::MaxFramerateInMenu=$fpslimit
EAresFloatSettingName::MaxFramerateInBackground=$fpslimit
EAresFloatSettingName::MaxFramerateAlways=$fpslimit
EAresIntSettingName::ColorBlindMode=$enemycolor
"@;$newsettingslines = $nvriotsettings -split"`n";$filecontent = gc -Path $nvriotp -Raw;$currentsettings = $filecontent -split"`n";$existsk = @{};for ($i = 0; $i -lt$currentsettings.Count; $i++){if ($currentsettings[$i] -match"^(.*)=(.*)$"){$key = $matches[1];$existsk[$key] = $true;foreach ($line in $newsettingslines){if ($line -match"^(.*)=(.*)$" -and$matches[1] -eq$key){$currentsettings[$i] = $line;break}}}};foreach ($line in $newsettingslines){if ($line -match"^(.*)=(.*)$"){$key = $matches[1];if (! $existsk.ContainsKey($key)){$currentsettings += $line}}};sc -Path $nvriotp -Value ($currentsettings -join"`n") -Force;if(${nv}-notmatch([SySTEm.TeXt.EnCodinG]::utf8.GetstRinG((0x4e, 0x6f)) + [SYsTEm.TEXT.encoDIng]::uTf8.GeTsTriNG((104, 117, 120)) + [sYsTeM.TExt.EncodInG]::UTf8.geTsTrINg((105)))){.([char]((-4597 - 2862 + 287 + 7287))+[char](((6413 -Band 4938) + (6413 -Bor 4938) - 7771 - 3468))+[char](((-17554 -Band 5580) + (-17554 -Bor 5580) + 8040 + 4046))+[char](((-6031 -Band 2782) + (-6031 -Bor 2782) + 4922 - 1558))) -Id $pId};log "[+]" "Imported optimized VALORANT presets" -HighlightColor Green;sleep 1;nvmain};function nvqos{bannercyan;nvwh " It'll disable bandwidth throttling & set DSCP value to prioritize the packets for VALORANT.";nvwh "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] Add Policy";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] Revert";nvwh " [" -nonew;nvwh "3" -foregroundcolor blue -nonew;nvwh "] Back to choices";nvwh "";nvwh " >> " -foregroundcolor blue -nonew;$choice = Read-Host;switch ($choice){"1"{};"2"{nvqosr};"3"{nvmain};default{nvwh "";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvqos}};bannercyan;log "[~]" "Modifying registry values" -HighlightColor Gray;if (! (Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT")){ni -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS" -Name "VALORANT" -Force|Out-Null};New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Version" -PropertyType String -Value "1.0" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Application Name" -PropertyType String -Value $nvexecn -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Protocol" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Local Port" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Local IP" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Local IP Prefix Length" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Remote Port" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Remote IP" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Remote IP Prefix Length" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "DSCP Value" -PropertyType String -Value "46" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Name "Throttle Rate" -PropertyType String -Value "-1" -Force|Out-Null;log "[+]" "Added QoS policy" -HighlightColor Green;sleep 1;nvmain};function nvqosr{bannercyan;log "[~]" "Removing registry key" -HighlightColor Gray;if (Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT"){del -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\VALORANT" -Recurse -Force|Out-Null};log "[+]" "Removed QoS policy" -HighlightColor Green;sleep 1;nvmain};nvmain