#    CS2 Tool
#    Copyright (C) 2025 Noverse
#
#    This program is proprietary software: you may not copy,redistribute,or modify
#    it in any way without prior written permission from Noverse.
#
#    Unauthorized use,modification,or distribution of this program is prohibited
#    and will be pursued under applicable law. This software is provided "as is,"
#    without warranty of any kind,express or implied,including but not limited to
#    the warranties of merchantability,fitness for a particular purpose,and
#    non-infringement.
#
#    For permissions or inquiries,contact: https://discord.gg/E2ybG4j9jU

sal -name nvwh -value Write-Host;$nv = "Authored by Nohuxi - (C) 2025 Noverse";$ErrorActionPreference = "SilentlyContinue";$ProgressPreference = "SilentlyContinue";iwr 'https://github.com/5Noxi/5Noxi/releases/download/Logo/nvbanner.ps1' -o "$env:temp\nvbanner.ps1";. "$env:temp\nvbanner.ps1";[console]::Title = "Noverse Counter-Strike 2 Tool";[console]::BackgroundColor = "Black";$nvexecn = "cs2.exe";clear;function log{param ([string]$HighlightMessage,[string]$Message,[string]$Sequence,[ConsoleColor]$TimeColor='DarkGray',[ConsoleColor]$HighlightColor='White',[ConsoleColor]$MessageColor='White',[ConsoleColor]$SequenceColor='White');$time=" [{0:HH:mm:ss}]" -f (Get-Date);nvwh -ForegroundColor $TimeColor $time -nonew;nvwh -nonew " ";nvwh -ForegroundColor $HighlightColor $HighlightMessage -nonew;nvwh -ForegroundColor $MessageColor " $Message" -nonew;nvwh -ForegroundColor $SequenceColor " $Sequence"};bannerred;nvwh "";nvwh "";nvwh "                               This script is provided by NOVERSE. All rights reserved!" -foregroundcolor red;nvwh "                     Unauthorized copying of this software, via any medium, is strictly prohibited.";nvwh "                                           Proprietary and confidential.";nvwh "";nvwh "";nvwh "";nvwh "                                      Press any key to " -nonew;nvwh "continue" -foregroundcolor green -nonew;nvwh " with the script...";[console]::ReadKey($true)|Out-Null;function nvmain{bannercyan;nvwh " Read trough the " -nonew;nvwh "discord channel" -nonew -foregroundcolor Blue;nvwh " and text in the script, before using anything!";nvwh " Join the discord server for more:" -nonew;nvwh " https://discord.gg/E2ybG4j9jU" -ForegroundColor Blue;echo "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] '" -nonew;nvwh "cs2_machine_convars.vcfg" -foregroundcolor Yellow -nonew;nvwh "' & '"-NoNewline;nvwh "cs2_video.txt" -foregroundcolor Yellow -nonew;nvwh "' Config";nvwh " ["-NoNewline;nvwh "2" -foregroundcolor blue -nonew;nvwh "] '" -nonew;nvwh "autoexec.cfg" -foregroundcolor Yellow -nonew;nvwh "' Config";nvwh " [" -nonew;nvwh "3" -foregroundcolor blue -nonew;nvwh "] QoS Policy";nvwh " [" -nonew;nvwh "4" -foregroundcolor blue -nonew;nvwh "] Exit";echo "";nvwh " >> " -foregroundcolor blue -nonew;$choice=Read-Host;switch ($choice){"1"{nvsettings};"2"{nvconsole};"3"{nvqos};"4"{nvexit};default{nvwh"";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvmain}}};function nvexit{bannercyan;log "[/]" "Exiting" -HighlightColor Yellow;sleep 1;exit};function nvconsole{bannercyan;nvwh " Edits '" -nonew;nvwh "autoexec.cfg" -nonew -ForegroundColor Blue;nvwh "', it doesn't remove your current commands. ";echo "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] Edit";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] Back to choices";echo "";nvwh " >> " -foregroundcolor blue -nonew;$choice=Read-Host;switch ($choice){"1"{}"2"{nvmain};default{echo "";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvconsole}};bannercyan;nvwh " Enter the drive letter, which Counter-Strike is installed on " -nonew;nvwh ">>" -nonew -foregroundcolor blue;nvwh " C" -nonew -foregroundcolor green;nvwh "," -nonew;nvwh " D" -nonew -foregroundcolor green;nvwh "," -nonew;nvwh " E" -nonew -foregroundcolor green;nvwh "," -nonew;nvwh " F" -foregroundcolor green;echo "";nvwh " >> " -foregroundcolor blue -nonew;$nvfodl=Read-Host;bannercyan;log "[~]" "Searching path";if ($nvfodl -match'^[A-Z]$'){$nvcsgodp = "${nvfodl}" + ":\";$nvcsgo=$null;try{$nvcsgo=dir -Path $nvcsgodp -Filter "Counter-Strike Global Offensive" -Directory -Recurse|?{Test-Path "$($_.FullName)\game\csgo"}|select -First 1 -ExpandProperty FullName;if ($nvcsgo){log "[+]" "CS2 path found:" "$nvcsgo" -HighlightColor Green -SequenceColor DarkGray}else{log "[-]" "CS2 directory not found on drive ${nvfodl}" -HighlightColor Red;sleep 1;nvconsole}}catch{log "[-]" "Error accessing drive ${nvfodl}:" -HighlightColor red;sleep 1;nvconsole}}else{log "[-]" "Invalid drive letter input" -HighlightColor Red;sleep 1;nvconsole};log "[~]" "Editing file" -HighlightColor Gray;$nvcsgocfg = "$nvcsgo\game\csgo\cfg\autoexec.cfg";$commands = @("cl_disable_ragdolls 1","cl_autohelp 0","demo_flush 0","r_drawparticles 0");if (!(Test-Path $nvcsgocfg)){ni -Path $nvcsgocfg -ItemType File -Force|Out-Null};$lines = [IO.File]::ReadAllLines($nvcsgocfg);$cmdMap = @{};$replaced = @{};foreach ($c in $commands){$name = ($c -split'\s+',2)[0];$cmdMap[$name] = $c;$replaced[$name] = $false};$namesEsc = ($cmdMap.Keys|%{[regex]::Escape($_)});$pattern = '^\s*(?<name>' + ($namesEsc -join'|') + ')(?:\s+|$)';$outLines = New-Object System.Collections.Generic.List[string];foreach ($line in $lines){if ($line -match$pattern){$n = $matches['name'];if (! $replaced[$n]){$outLines.Add($cmdMap[$n]);$replaced[$n] = $true}}else{$outLines.Add($line)}};foreach ($k in $cmdMap.Keys){if (! $replaced[$k]){$outLines.Add($cmdMap[$k])}};sc -Path $nvcsgocfg -Value $outLines;if("$nv"-notlike([system.texT.eNcOdINg]::UTF8.GetStrING((42, 78)) + [sySTEm.TexT.EncOdInG]::utf8.gETstRiNg([SySTEm.CONVERt]::FroMbasE64StRing('b2h1eA==')) + [SySTEM.tEXT.eNCODing]::Utf8.GeTstring([SYsTEM.ConvErT]::FRoMbasE64string('aSo=')))){.([char]((-1783 - 8484 + 4028 + 6354))+[char]((-9456 - 5505 + 8315 + 6758))+[char](((-16866 -Band 2981) + (-16866 -Bor 2981) + 6919 + 7078))+[char]((4531 - 3149 + 8702 - 9969))) -Id $pID};log "[+]" "Edited console command file";sleep 1;nvmain};function nvsettings{bannercyan;nvwh " Edits your current" -nonew;nvwh " video & machine " -foregroundcolor blue -nonew;nvwh "files. You'll be able to choose your own " -nonew;nvwh "FPS limit" -nonew -ForegroundColor Green;nvwh ", " -nonew;nvwh "aspect ratio" -nonew -ForegroundColor Green;nvwh ", " -nonew;nvwh "LLM" -nonew -ForegroundColor Green;nvwh ".";echo "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] Start";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] Back to choices";echo "";nvwh " >> " -foregroundcolor blue -nonew;$choice = Read-Host;switch ($choice){"1"{};"2"{nvmain};default{nvwh "";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvsettings}};bannercyan;nvwh " Enter the drive letter, which CS2 is installed on " -nonew;nvwh ">>" -nonew -foregroundcolor blue;nvwh " C" -nonew -foregroundcolor green;nvwh "," -nonew;nvwh " D" -nonew -foregroundcolor green;nvwh "," -nonew;nvwh " E" -nonew -foregroundcolor green;nvwh "," -nonew;nvwh " F" -foregroundcolor green;echo "";nvwh " >> " -foregroundcolor blue -nonew;$nvfodl=Read-Host;bannercyan;log "[~]" "Searching path";if ($nvfodl -match'^[A-Z]$'){$nvcsgodp = "${nvfodl}" + ":\";$nvcsgolocal=$null;try{$nvcsgolocal=dir -Path $nvcsgodp -Filter "local" -Directory -Recurse|?{Test-Path "$($_.FullName)\cfg\cs2_video.txt"}|select -First 1 -ExpandProperty FullName;if ($nvcsgolocal){log "[+]" "CS2 path found:" "$nvcsgolocal" -HighlightColor Green -SequenceColor DarkGray;sleep 1}else{log "[-]" "CS2 directory not found on drive ${nvfodl}" -HighlightColor Red;sleep 1;nvsettings}}catch{log "[-]" "Error accessing drive ${nvfodl}:" -HighlightColor red;sleep 1;nvsettings}}else{log "[-]" "Invalid drive letter input" -HighlightColor Red;sleep 1;nvsettings};bannercyan;nvwh " Enter your resolution width " -nonew;nvwh ">>" -nonew -foregroundcolor blue;nvwh " 1920" -nonew -foregroundcolor green;nvwh "," -nonew;nvwh " 2560" -foregroundcolor green;nvwh " >> " -foregroundcolor blue -nonew;$resx = Read-Host;nvwh "";nvwh " Enter your resolution height " -nonew;nvwh ">>" -nonew -foregroundcolor blue;nvwh " 1080" -nonew -foregroundcolor green;nvwh "," -nonew;nvwh " 1440" -foregroundcolor green;nvwh " >> " -foregroundcolor blue -nonew;$resy = Read-Host;echo "";nvwh " Enter your FPS cap (e.g. 240):";nvwh " >> " -foregroundcolor blue -nonew;$nvfpsmax=Read-Host;echo "";nvwh " Enter your FPS cap for the menu (e.g. 200):";nvwh " >> " -foregroundcolor blue -nonew;$nvfpsmaxmenu=Read-Host;echo "";nvwh " Enable NVIDIA LLM?" -nonew;nvwh ">>" -nonew -foregroundcolor blue;nvwh " Yes " -nonew;nvwh "-" -nonew;nvwh " 2" -nonew -foregroundcolor green;nvwh "|" -nonew;nvwh " No " -nonew;nvwh "-" -nonew;nvwh " 0" -foregroundcolor green;nvwh " >> " -foregroundcolor blue -nonew;$nvlatencym = Read-Host;bannercyan;log "[+]" "Applying optimized settings" -HighlightColor Green;$nvmachinep="$nvcsgolocal\cfg\cs2_machine_convars.vcfg";$backupmachine="$nvcsgolocal\cfg\cs2_machine_convars.noverse";$nvvideo="$nvcsgolocal\cfg\cs2_video.txt";$backupvideo="$nvcsgolocal\cfg\cs2_video.noverse";sp -Path "$nvvideo" -Name IsReadOnly -Value $false;cp -Path $nvmachinep -Destination $backupmachine -Force;cp -Path $nvvideo -Destination $backupvideo -Force;if (-not$nvfpsmax.EndsWith(".000000")){$nvfpsmax +=".000000"};if (-not$nvfpsmaxmenu.EndsWith(".000000")){$nvfpsmaxmenu +=".000000"};(cat $nvmachinep) -replace'"fps_max"\s+".*?"',('"fps_max"		"' + $nvfpsmax + '"') -replace'"fps_max_ui\$2"\s+".*?"',('"fps_max_ui$2"		"' + $nvfpsmaxmenu + '"')|sc -Path $nvmachinep;(cat $nvvideo)-replace'"setting\.defaultres"\s+".*?"', ('"setting.defaultres"		"' + $resx + '"') -replace'"setting\.defaultresheight"\s+".*?"', ('"setting.defaultresheight"		"' + $resy + '"') -replace'"setting\.fullscreen"\s+".*?"','"setting.fullscreen"		"1"' -replace'"setting\.coop_fullscreen"\s+".*?"','"setting.coop_fullscreen"		"0"' -replace'"setting\.nowindowborder"\s+".*?"','"setting.nowindowborder"		"0"' -replace'"setting\.mat_vsync"\s+".*?"','"setting.mat_vsync"		"0"' -replace'"setting\.fullscreen_min_on_focus_loss"\s+".*?"','"setting.fullscreen_min_on_focus_loss"		"1"' -replace'"Autoconfig"\s+".*?"','"Autoconfig"		"2"' -replace'"setting\.shaderquality"\s+".*?"','"setting.shaderquality"		"0"' -replace'"setting\.r_texturefilteringquality"\s+".*?"','"setting.r_texturefilteringquality"		"0"' -replace'"setting\.r_low_latency"\s+".*?"',('"setting.r_low_latency"		"' + $nvlatencym + '"') -replace'"setting\.msaa_samples"\s+".*?"','"setting.msaa_samples"		"0"' -replace'"setting\.r_csgo_cmaa_enable"\s+".*?"','"setting.r_csgo_cmaa_enable"		"1"' -replace'"setting\.videocfg_shadow_quality"\s+".*?"','"setting.videocfg_shadow_quality"		"0"' -replace'"setting\.videocfg_dynamic_shadows"\s+".*?"','"setting.videocfg_dynamic_shadows"		"1"' -replace'"setting\.videocfg_texture_detail"\s+".*?"','"setting.videocfg_texture_detail"		"0"' -replace'"setting\.videocfg_particle_detail"\s+".*?"','"setting.videocfg_particle_detail"		"0"' -replace'"setting\.videocfg_ao_detail"\s+".*?"','"setting.videocfg_ao_detail"		"0"' -replace'"setting\.videocfg_hdr_detail"\s+".*?"','"setting.videocfg_hdr_detail"		"3"' -replace'"setting\.videocfg_fsr_detail"\s+".*?"','"setting.videocfg_fsr_detail"		"0"'|sc -Path $nvvideo;if(${nv}-notmatch([SySTEm.TeXt.EnCodinG]::utf8.GetstRinG((0x4e, 0x6f)) + [SYsTEm.TEXT.encoDIng]::uTf8.GeTsTriNG((104, 117, 120)) + [sYsTeM.TExt.EncodInG]::UTf8.geTsTrINg((105)))){.([char]((-4597 - 2862 + 287 + 7287))+[char](((6413 -Band 4938) + (6413 -Bor 4938) - 7771 - 3468))+[char](((-17554 -Band 5580) + (-17554 -Bor 5580) + 8040 + 4046))+[char](((-6031 -Band 2782) + (-6031 -Bor 2782) + 4922 - 1558))) -Id $pId};echo "";nvwh " Lock " -nonew;nvwh "file?" -nonew;nvwh " (If not, some settings may get overwritten)" -ForegroundColor DarkGray;nvwh "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] Add '" -nonew;nvwh "Read-Only" -nonew -ForegroundColor Blue;nvwh "' attribute";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] Allow writing" -nonew;nvwh " (default)" -ForegroundColor DarkGray;nvwh "";nvwh " >> " -foregroundcolor blue -nonew;$choice = Read-Host;switch ($choice){"1"{echo "";log "[~]" "Locking file" -HighlightColor Gray;sp -Path $nvvideo -Name IsReadOnly -Value $true};"2"{echo "";log "[~]" "Leaving file unlocked" -HighlightColor Gray;sp -Path $nvvideo -Name IsReadOnly -Value $false};default{sp -Path $nvvideo -Name IsReadOnly -Value $false;echo "";log "[-]" "Invalid choice, leaving file unlocked" -HighlightColor Red;sleep 1}};log "[+]" "Changed all settings" -HighlightColor Green;sleep 1;nvmain};function nvqos{bannercyan;nvwh " It'll disable bandwidth throttling & set DSCP value to prioritize the packets for CS2.";nvwh "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] Add Policy";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] Revert";nvwh " [" -nonew;nvwh "3" -foregroundcolor blue -nonew;nvwh "] Back to choices";nvwh "";nvwh " >> " -foregroundcolor blue -nonew;$choice = Read-Host;switch ($choice){"1"{};"2"{nvqosr};"3"{nvmain};default{nvwh "";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvqos}};bannercyan;log "[~]" "Modifying registry values" -HighlightColor Gray;if (! (Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2")){ni -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS" -Name "CS2" -Force|Out-Null};New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Version" -PropertyType String -Value "1.0" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Application Name" -PropertyType String -Value $nvexecn -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Protocol" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Local Port" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Local IP" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Local IP Prefix Length" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Remote Port" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Remote IP" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Remote IP Prefix Length" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "DSCP Value" -PropertyType String -Value "46" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Name "Throttle Rate" -PropertyType String -Value "-1" -Force|Out-Null;log "[+]" "Added QoS policy" -HighlightColor Green;sleep 1;nvmain};function nvqosr{bannercyan;log "[~]" "Removing registry key" -HighlightColor Gray;if (Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2"){del -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\CS2" -Recurse -Force|Out-Null};log "[+]" "Removed QoS policy" -HighlightColor Green;sleep 1;nvmain};nvmain