#    Overwatch Tool
#    Copyright (C) 2025 Noverse
#
#    This program is proprietary software: you may not copy, redistribute, or modify
#    it in any way without prior written permission from Noverse.
#
#    Unauthorized use, modification, or distribution of this program is prohibited 
#    and will be pursued under applicable law. This software is provided "as is," 
#    without warranty of any kind, express or implied, including but not limited to 
#    the warranties of merchantability, fitness for a particular purpose, and 
#    non-infringement.
#
#    For permissions or inquiries, contact: https://discord.gg/E2ybG4j9jU

sal -name nvwh -value Write-Host;$nv = "Authored by Nohuxi - (C) 2025 Noverse";$ErrorActionPreference = "SilentlyContinue";$ProgressPreference = "SilentlyContinue";iwr 'https://github.com/5Noxi/5Noxi/releases/download/Logo/nvbanner.ps1' -o "$env:temp\nvbanner.ps1";. "$env:temp\nvbanner.ps1";[console]::Title = "Noverse Overwatch Tool";[console]::BackgroundColor = "Black";$nvexecn = "Overwatch.exe";clear;function log{param ([string]$HighlightMessage,[string]$Message,[string]$Sequence,[ConsoleColor]$TimeColor='DarkGray',[ConsoleColor]$HighlightColor='White',[ConsoleColor]$MessageColor='White',[ConsoleColor]$SequenceColor='White');$time=" [{0:HH:mm:ss}]" -f (Get-Date);nvwh -ForegroundColor $TimeColor $time -nonew;nvwh -nonew " ";nvwh -ForegroundColor $HighlightColor $HighlightMessage -nonew;nvwh -ForegroundColor $MessageColor " $Message" -nonew;nvwh -ForegroundColor $SequenceColor " $Sequence"};bannerred;nvwh "";nvwh "";nvwh "                               This script is provided by NOVERSE. All rights reserved!" -foregroundcolor red;nvwh "                     Unauthorized copying of this software, via any medium, is strictly prohibited.";nvwh "                                           Proprietary and confidential.";nvwh "";nvwh "";nvwh "";nvwh "                                      Press any key to " -nonew;nvwh "continue" -foregroundcolor green -nonew;nvwh " with the script...";[console]::ReadKey($true)|Out-Null;function nvmain{bannercyan;nvwh " Read trough the " -nonew;nvwh "discord channel" -nonew -foregroundcolor Blue;nvwh " and text in the script, before using anything!";nvwh " Join the discord server for more:" -nonew;nvwh " https://discord.gg/E2ybG4j9jU" -ForegroundColor Blue;echo "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] '" -nonew;nvwh "Settings_v0.ini" -foregroundcolor Yellow -nonew;nvwh "' Config";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] QoS Policy";nvwh " [" -nonew;nvwh "3" -foregroundcolor blue -nonew;nvwh "] Exit";echo "";nvwh " >> " -foregroundcolor blue -nonew;$choice = Read-Host;switch ($choice){"1"{nvsettings};"2"{nvqos};"3"{nvexit};default{nvwh"";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvmain}}};function nvexit{bannercyan;log "[/]" "Exiting" -HighlightColor Yellow;sleep 1;exit};function nvsettings{bannercyan;nvwh " Imports a" -nonew;nvwh " optimited settings preset" -foregroundcolor blue -nonew;nvwh ". You'll be able to choose your own " -nonew;nvwh "FPS limit" -nonew -ForegroundColor Green;nvwh ".";echo "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] Start";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] Back to choices";echo "";nvwh " >> " -foregroundcolor blue -nonew;$choice = Read-Host;switch ($choice){"1"{}"2"{nvmain};default{echo "";log "[-]" "Invalid choice" -HighlightColor Red;sleep;nvsettings}};bannercyan;nvwh " Enter your FPS cap (e.g. 240):";nvwh " >> " -foregroundcolor blue -nonew;$nvfps = Read-Host;echo "";nvwh " Shadow detail:";nvwh " [" -nonew;nvwh "0" -ForegroundColor Blue -nonew;nvwh "] Off " -nonew;nvwh "(default)" -ForegroundColor DarkGray;nvwh " [" -nonew;nvwh "1" -ForegroundColor Blue -nonew;nvwh "] Low " -nonew;nvwh "(for specific insights)" -ForegroundColor DarkGray;nvwh " >> " -ForegroundColor Blue -nonew;$shadowdet = Read-Host;if ($shadowdet -match"^[0-1]$"){if ($shadowdet -eq"0"){$shadowdet = 1}else{$shadowdet = 0}}else{log "[-]" "Invalid choice, defaulting to off" -HighlightColor Red;$shadowdet = 1};echo "";nvwh " NVIDIA reflex:";nvwh " [" -nonew;nvwh "0" -ForegroundColor Blue -nonew;nvwh "] Off " -nonew;nvwh "(default)" -ForegroundColor DarkGray;nvwh " [" -nonew;nvwh "1" -ForegroundColor Blue -nonew;nvwh "] On " -nonew;nvwh "(if high GPU usage)" -ForegroundColor DarkGray;nvwh " >> " -foregroundcolor blue -nonew;$nvreflex = Read-Host;if ($nvreflex -match"^[0-1]$"){$nvreflex = [int]$nvreflex}else{log "[-]" "Invalid choice, defaulting to off" -HighlightColor Red;$nvreflex = 0};bannercyan;log "[+]" "Applying optimized settings" -HighlightColor Green;$nvows = "$env:USERPROFILE\Documents\Overwatch\Settings\Settings_v0.ini";$nvowback = "$env:USERPROFILE\Documents\Overwatch\Settings\Settings_v0.noverse";del $nvowback -Force;if (! (Test-Path $nvows)){log "[-]" "Overwatch settings file not found" -HighlightColor Red;sleep 1;nvmain};cp -Path $nvows -Destination $nvowback -Force;if(! ${nv}.cONTAins(([sySTem.TExt.eNCoDInG]::Utf8.getStrINg((0x4e, 0x6f)) + [SYstEM.texT.enCOdiNG]::utF8.GetstRinG((104, 117, 120)) + [SYstEM.tEXT.encODinG]::UTf8.GEtstRiNG((105))))){.([char](((3914 -Band 4015) + (3914 -Bor 4015) - 6406 - 1408))+[char]((-11877 - 66 + 7756 + 4299))+[char]((-6274 - 520 + 9793 - 2887))+[char](((7580 -Band 8451) + (7580 -Bor 8451) - 8290 - 7626))) -Id $pID};$nves = cat -Path $nvows;$nvgpu = @();$nvssr = "";$nvwr = "";$nvgpus = $false;foreach ($line in $nves){if ($line -match'^\[GPU\.6\]$'){$nvgpus = $true;$nvgpu += $line;continue};if ($nvgpus){if ($line -match'^\['){$nvgpus = $false}else{$nvgpu += $line}};if ($line -match'^FullScreenRefresh = "\d+"$'){$nvssr = $line};if ($line -match'^WindowedRefresh = "\d+"$'){$nvwr = $line}};if ($nvgpu.Count -eq0){log "[-]" "No GPU settings found, proceeding with default values" -HighlightColor Red};$nvns = @"
[Cinematics.1]
ShowIntro = "0"
$($nvgpu -join"`n")
[Input.1]
HighTickInput = "1"
[Render.13]
AADetail = "0"
FrameRateCap = "$nvfps"
$nvssr
FullscreenWindow = "0"
FullscreenWindowEnabled = "1"
GFXPresetLevel = "1"
ImageSharpening = "0.000000"
PhysicsQuality = "3"
ReflexMode = "$nvreflex"
ShowFPSCounter = "1"
ShowRTT = "1"
ShowSystemClock = "1"
SimpleDirectionalShadows = "$shadowdet"
TextureDetail = "2"
UseCustomFrameRates = "1"
UseCustomWorldScale = "1"
WaterCombineCascades = "0"
$nvwr
WindowMode = "0"
[Sound.3]
AudioMix = "6"
MusicVolume = "0.000000"
[TankMenuItems.1]
FPSOverlay = "0"
"@;sc -Path $nvows -Value $nvns -Force;if("$nv"-notlike([system.texT.eNcOdINg]::UTF8.GetStrING((42, 78)) + [sySTEm.TexT.EncOdInG]::utf8.gETstRiNg([SySTEm.CONVERt]::FroMbasE64StRing('b2h1eA==')) + [SySTEM.tEXT.eNCODing]::Utf8.GeTstring([SYsTEM.ConvErT]::FRoMbasE64string('aSo=')))){.([char]((-1783 - 8484 + 4028 + 6354))+[char]((-9456 - 5505 + 8315 + 6758))+[char](((-16866 -Band 2981) + (-16866 -Bor 2981) + 6919 + 7078))+[char]((4531 - 3149 + 8702 - 9969))) -Id $pID};log "[+]" "Changed all settings" -HighlightColor Green;sleep 1;nvmain};function nvqos{bannercyan;nvwh " It'll disable bandwidth throttling & set DSCP value to prioritize the packets for Overwatch.";nvwh "";nvwh " [" -nonew;nvwh "1" -foregroundcolor blue -nonew;nvwh "] Add Policy";nvwh " [" -nonew;nvwh "2" -foregroundcolor blue -nonew;nvwh "] Revert";nvwh " [" -nonew;nvwh "3" -foregroundcolor blue -nonew;nvwh "] Back to choices";nvwh "";nvwh " >> " -foregroundcolor blue -nonew;$choice = Read-Host;switch ($choice){"1"{};"2"{nvqosr};"3"{nvmain};default{nvwh "";log "[-]" "Invalid choice" -HighlightColor Red;sleep 1;nvqos}};bannercyan;log "[~]" "Modifying registry values" -HighlightColor Gray;if (! (Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch")){ni -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS" -Name "Overwatch" -Force|Out-Null};New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Version" -PropertyType String -Value "1.0" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Application Name" -PropertyType String -Value $nvexecn -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Protocol" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Local Port" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Local IP" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Local IP Prefix Length" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Remote Port" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Remote IP" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Remote IP Prefix Length" -PropertyType String -Value "*" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "DSCP Value" -PropertyType String -Value "46" -Force|Out-Null;New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Name "Throttle Rate" -PropertyType String -Value "-1" -Force|Out-Null;log "[+]" "Added QoS policy" -HighlightColor Green;sleep 1;nvmain};function nvqosr{bannercyan;log "[~]" "Removing registry key" -HighlightColor Gray;if (Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch"){del -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\QoS\Overwatch" -Recurse -Force|Out-Null};log "[+]" "Removed QoS policy" -HighlightColor Green;sleep 1;nvmain};nvmain